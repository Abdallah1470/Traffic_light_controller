;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/9/2024 6:43:08 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28A3      	GOTO       163
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A8      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A3      	MOVWF      35
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A2      	MOVWF      34
0x000F	0x087C      	MOVF       R12, 0
0x0010	0x00A1      	MOVWF      33
0x0011	0x087D      	MOVF       R13, 0
0x0012	0x00A0      	MOVWF      32
;FinalProject.c,15 :: 		void interrupt() {
;FinalProject.c,16 :: 		if (INTCON.INTF) {
0x0013	0x1C8B      	BTFSS      INTCON, 1
0x0014	0x2828      	GOTO       L_interrupt0
;FinalProject.c,17 :: 		Delay_ms(30); // Debounce delay
0x0015	0x304E      	MOVLW      78
0x0016	0x00FC      	MOVWF      R12
0x0017	0x30EB      	MOVLW      235
0x0018	0x00FD      	MOVWF      R13
L_interrupt1:
0x0019	0x0BFD      	DECFSZ     R13, 1
0x001A	0x2819      	GOTO       L_interrupt1
0x001B	0x0BFC      	DECFSZ     R12, 1
0x001C	0x2819      	GOTO       L_interrupt1
;FinalProject.c,18 :: 		INTCON.INTF = 0; // Clear the interrupt flag
0x001D	0x108B      	BCF        INTCON, 1
;FinalProject.c,19 :: 		current_mode = (current_mode == 0 ? 1 : 0); // Toggle mode
0x001E	0x0824      	MOVF       _current_mode, 0
0x001F	0x3A00      	XORLW      0
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2825      	GOTO       L_interrupt2
0x0022	0x3001      	MOVLW      1
0x0023	0x00F1      	MOVWF      R1
0x0024	0x2826      	GOTO       L_interrupt3
L_interrupt2:
0x0025	0x01F1      	CLRF       R1
L_interrupt3:
0x0026	0x0871      	MOVF       R1, 0
0x0027	0x00A4      	MOVWF      _current_mode
;FinalProject.c,20 :: 		}
L_interrupt0:
;FinalProject.c,21 :: 		}
L_end_interrupt:
L__interrupt65:
0x0028	0x0823      	MOVF       35, 0
0x0029	0x00F0      	MOVWF      R0
0x002A	0x0822      	MOVF       34, 0
0x002B	0x00F1      	MOVWF      R1
0x002C	0x0821      	MOVF       33, 0
0x002D	0x00FC      	MOVWF      R12
0x002E	0x0820      	MOVF       32, 0
0x002F	0x00FD      	MOVWF      R13
0x0030	0x0828      	MOVF       ___savePCLATH, 0
0x0031	0x008A      	MOVWF      PCLATH
0x0032	0x0E29      	SWAPF      ___saveSTATUS, 0
0x0033	0x0083      	MOVWF      STATUS
0x0034	0x0EFF      	SWAPF      R15, 1
0x0035	0x0E7F      	SWAPF      R15, 0
0x0036	0x0009      	RETFIE
; end of _interrupt
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x0037	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0038	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0039	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x003A	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x003B	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x003C	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x003D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x003E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x003F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0040	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0041	0x2844      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0042	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0043	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0044	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0045	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0046	0x283C      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x0047	0x0008      	RETURN
; end of _Div_8X8_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0048	0x1283      	BCF        STATUS, 5
0x0049	0x1303      	BCF        STATUS, 6
0x004A	0x0826      	MOVF       ___DoICPAddr+1, 0
0x004B	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x004C	0x0825      	MOVF       ___DoICPAddr, 0
0x004D	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x004E	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x004F	0x2048      	CALL       _____DoICP
0x0050	0x118A      	BCF        PCLATH, 3
0x0051	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0052	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0053	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0054	0x0AA5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0055	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0056	0x0AA6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0057	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0058	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0059	0x284F      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x005A	0x0008      	RETURN
; end of ___CC2DW
_setCounter:
;FinalProject.c,23 :: 		void setCounter(char seconds) {
;FinalProject.c,24 :: 		char units = seconds % 10;
0x005B	0x300A      	MOVLW      10
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x00F4      	MOVWF      R4
0x005F	0x082E      	MOVF       FARG_setCounter_seconds, 0
0x0060	0x00F0      	MOVWF      R0
0x0061	0x2037      	CALL       _Div_8X8_U
0x0062	0x0878      	MOVF       R8, 0
0x0063	0x00F0      	MOVWF      R0
0x0064	0x0870      	MOVF       R0, 0
0x0065	0x00B1      	MOVWF      setCounter_units_L0
;FinalProject.c,25 :: 		char tens = seconds / 10;
0x0066	0x300A      	MOVLW      10
0x0067	0x00F4      	MOVWF      R4
0x0068	0x082E      	MOVF       FARG_setCounter_seconds, 0
0x0069	0x00F0      	MOVWF      R0
0x006A	0x2037      	CALL       _Div_8X8_U
0x006B	0x0870      	MOVF       R0, 0
0x006C	0x00B2      	MOVWF      setCounter_tens_L0
;FinalProject.c,27 :: 		if (seconds == 0) {
0x006D	0x082E      	MOVF       FARG_setCounter_seconds, 0
0x006E	0x3A00      	XORLW      0
0x006F	0x1D03      	BTFSS      STATUS, 2
0x0070	0x2874      	GOTO       L_setCounter4
;FinalProject.c,28 :: 		enableUnits = 0;
0x0071	0x1106      	BCF        PORTB, 2
;FinalProject.c,29 :: 		enableTens = 0;
0x0072	0x1186      	BCF        PORTB, 3
;FinalProject.c,30 :: 		} else {
0x0073	0x288F      	GOTO       L_setCounter5
L_setCounter4:
;FinalProject.c,31 :: 		enableUnits = (seconds < 10) ? 1 : 1;
0x0074	0x300A      	MOVLW      10
0x0075	0x022E      	SUBWF      FARG_setCounter_seconds, 0
0x0076	0x1803      	BTFSC      STATUS, 0
0x0077	0x287B      	GOTO       L_setCounter6
0x0078	0x3001      	MOVLW      1
0x0079	0x00AF      	MOVWF      ?FLOC___setCounterT14
0x007A	0x287D      	GOTO       L_setCounter7
L_setCounter6:
0x007B	0x3001      	MOVLW      1
0x007C	0x00AF      	MOVWF      ?FLOC___setCounterT14
L_setCounter7:
0x007D	0x182F      	BTFSC      ?FLOC___setCounterT14, 0
0x007E	0x2881      	GOTO       L__setCounter67
0x007F	0x1106      	BCF        PORTB, 2
0x0080	0x2882      	GOTO       L__setCounter68
L__setCounter67:
0x0081	0x1506      	BSF        PORTB, 2
L__setCounter68:
;FinalProject.c,32 :: 		enableTens = (seconds >= 10) ? 1 : 0;
0x0082	0x300A      	MOVLW      10
0x0083	0x022E      	SUBWF      FARG_setCounter_seconds, 0
0x0084	0x1C03      	BTFSS      STATUS, 0
0x0085	0x2889      	GOTO       L_setCounter8
0x0086	0x3001      	MOVLW      1
0x0087	0x00B0      	MOVWF      ?FLOC___setCounterT18
0x0088	0x288A      	GOTO       L_setCounter9
L_setCounter8:
0x0089	0x01B0      	CLRF       ?FLOC___setCounterT18
L_setCounter9:
0x008A	0x1830      	BTFSC      ?FLOC___setCounterT18, 0
0x008B	0x288E      	GOTO       L__setCounter69
0x008C	0x1186      	BCF        PORTB, 3
0x008D	0x288F      	GOTO       L__setCounter70
L__setCounter69:
0x008E	0x1586      	BSF        PORTB, 3
L__setCounter70:
;FinalProject.c,33 :: 		}
L_setCounter5:
;FinalProject.c,34 :: 		PORTC = (units & 0x0F) | ((tens & 0x0F) << 4);
0x008F	0x300F      	MOVLW      15
0x0090	0x0531      	ANDWF      setCounter_units_L0, 0
0x0091	0x00F3      	MOVWF      R3
0x0092	0x300F      	MOVLW      15
0x0093	0x0532      	ANDWF      setCounter_tens_L0, 0
0x0094	0x00F2      	MOVWF      R2
0x0095	0x0872      	MOVF       R2, 0
0x0096	0x00F0      	MOVWF      R0
0x0097	0x0DF0      	RLF        R0, 1
0x0098	0x1070      	BCF        R0, 0
0x0099	0x0DF0      	RLF        R0, 1
0x009A	0x1070      	BCF        R0, 0
0x009B	0x0DF0      	RLF        R0, 1
0x009C	0x1070      	BCF        R0, 0
0x009D	0x0DF0      	RLF        R0, 1
0x009E	0x1070      	BCF        R0, 0
0x009F	0x0870      	MOVF       R0, 0
0x00A0	0x0473      	IORWF      R3, 0
0x00A1	0x0087      	MOVWF      PORTC
;FinalProject.c,35 :: 		}
L_end_setCounter:
0x00A2	0x0008      	RETURN
; end of _setCounter
_main:
0x00A3	0x1283      	BCF        STATUS, 5
0x00A4	0x1303      	BCF        STATUS, 6
0x00A5	0x01A4      	CLRF       _current_mode
;FinalProject.c,37 :: 		void main() {
;FinalProject.c,39 :: 		TRISB = 0x03; // RB0, RB1 as inputs (switches), others as outputs
0x00A6	0x3003      	MOVLW      3
0x00A7	0x1683      	BSF        STATUS, 5
0x00A8	0x0086      	MOVWF      TRISB
;FinalProject.c,40 :: 		TRISC = 0x00; // PORTC as output (7-segment display)
0x00A9	0x0187      	CLRF       TRISC
;FinalProject.c,41 :: 		TRISD = 0x00; // PORTD as output (LEDs)
0x00AA	0x0188      	CLRF       TRISD
;FinalProject.c,42 :: 		PORTC = 0x00; // Clear PORTC
0x00AB	0x1283      	BCF        STATUS, 5
0x00AC	0x0187      	CLRF       PORTC
;FinalProject.c,43 :: 		PORTD = 0x00; // Clear PORTD
0x00AD	0x0188      	CLRF       PORTD
;FinalProject.c,44 :: 		enableUnits = 1;
0x00AE	0x1506      	BSF        PORTB, 2
;FinalProject.c,45 :: 		enableTens = 1;
0x00AF	0x1586      	BSF        PORTB, 3
;FinalProject.c,48 :: 		INTCON.GIE = 1; // Enable global interrupts
0x00B0	0x178B      	BSF        INTCON, 7
;FinalProject.c,49 :: 		INTCON.INTE = 1; // Enable INT external interrupt
0x00B1	0x160B      	BSF        INTCON, 4
;FinalProject.c,50 :: 		INTCON.INTF = 0; // Clear the interrupt flag
0x00B2	0x108B      	BCF        INTCON, 1
;FinalProject.c,51 :: 		OPTION_REG.INTEDG = 1; // Interrupt on rising edge
0x00B3	0x1683      	BSF        STATUS, 5
0x00B4	0x1701      	BSF        OPTION_REG, 6
;FinalProject.c,53 :: 		while (1) {
L_main10:
;FinalProject.c,54 :: 		if (!current_mode) { // Automatic mode
0x00B5	0x1283      	BCF        STATUS, 5
0x00B6	0x0824      	MOVF       _current_mode, 0
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x2931      	GOTO       L_main12
;FinalProject.c,56 :: 		southGreenLed = 0;
0x00B9	0x1288      	BCF        PORTD, 5
;FinalProject.c,57 :: 		southRedLed = 0;
0x00BA	0x1188      	BCF        PORTD, 3
;FinalProject.c,58 :: 		southYellowLed = 0;
0x00BB	0x1208      	BCF        PORTD, 4
;FinalProject.c,59 :: 		westGreenLed = 0;
0x00BC	0x1108      	BCF        PORTD, 2
;FinalProject.c,60 :: 		westYellowLed = 0;
0x00BD	0x1088      	BCF        PORTD, 1
;FinalProject.c,61 :: 		westRedLed = 1; // West street red light
0x00BE	0x1408      	BSF        PORTD, 0
;FinalProject.c,64 :: 		for (i = 15; i > 0 && !current_mode; i--) {
0x00BF	0x300F      	MOVLW      15
0x00C0	0x00A7      	MOVWF      _i
L_main13:
0x00C1	0x0827      	MOVF       _i, 0
0x00C2	0x3C00      	SUBLW      0
0x00C3	0x1803      	BTFSC      STATUS, 0
0x00C4	0x28F5      	GOTO       L_main14
0x00C5	0x0824      	MOVF       _current_mode, 0
0x00C6	0x1D03      	BTFSS      STATUS, 2
0x00C7	0x28F5      	GOTO       L_main14
L__main63:
;FinalProject.c,65 :: 		southGreenLed = (i > 3 ? 1 : 0);
0x00C8	0x0827      	MOVF       _i, 0
0x00C9	0x3C03      	SUBLW      3
0x00CA	0x1803      	BTFSC      STATUS, 0
0x00CB	0x28CF      	GOTO       L_main18
0x00CC	0x3001      	MOVLW      1
0x00CD	0x00AA      	MOVWF      ?FLOC___mainT55
0x00CE	0x28D0      	GOTO       L_main19
L_main18:
0x00CF	0x01AA      	CLRF       ?FLOC___mainT55
L_main19:
0x00D0	0x182A      	BTFSC      ?FLOC___mainT55, 0
0x00D1	0x28D4      	GOTO       L__main72
0x00D2	0x1288      	BCF        PORTD, 5
0x00D3	0x28D5      	GOTO       L__main73
L__main72:
0x00D4	0x1688      	BSF        PORTD, 5
L__main73:
;FinalProject.c,66 :: 		southYellowLed = (i <= 3 ? 1 : 0);
0x00D5	0x0827      	MOVF       _i, 0
0x00D6	0x3C03      	SUBLW      3
0x00D7	0x1C03      	BTFSS      STATUS, 0
0x00D8	0x28DC      	GOTO       L_main20
0x00D9	0x3001      	MOVLW      1
0x00DA	0x00AB      	MOVWF      ?FLOC___mainT59
0x00DB	0x28DD      	GOTO       L_main21
L_main20:
0x00DC	0x01AB      	CLRF       ?FLOC___mainT59
L_main21:
0x00DD	0x182B      	BTFSC      ?FLOC___mainT59, 0
0x00DE	0x28E1      	GOTO       L__main74
0x00DF	0x1208      	BCF        PORTD, 4
0x00E0	0x28E2      	GOTO       L__main75
L__main74:
0x00E1	0x1608      	BSF        PORTD, 4
L__main75:
;FinalProject.c,67 :: 		setCounter(i);
0x00E2	0x0827      	MOVF       _i, 0
0x00E3	0x00AE      	MOVWF      FARG_setCounter_seconds
0x00E4	0x205B      	CALL       _setCounter
;FinalProject.c,68 :: 		Delay_ms(1000); // Wait 1 second
0x00E5	0x300B      	MOVLW      11
0x00E6	0x00FB      	MOVWF      R11
0x00E7	0x3026      	MOVLW      38
0x00E8	0x00FC      	MOVWF      R12
0x00E9	0x305D      	MOVLW      93
0x00EA	0x00FD      	MOVWF      R13
L_main22:
0x00EB	0x0BFD      	DECFSZ     R13, 1
0x00EC	0x28EB      	GOTO       L_main22
0x00ED	0x0BFC      	DECFSZ     R12, 1
0x00EE	0x28EB      	GOTO       L_main22
0x00EF	0x0BFB      	DECFSZ     R11, 1
0x00F0	0x28EB      	GOTO       L_main22
0x00F1	0x0000      	NOP
0x00F2	0x0000      	NOP
;FinalProject.c,64 :: 		for (i = 15; i > 0 && !current_mode; i--) {
0x00F3	0x03A7      	DECF       _i, 1
;FinalProject.c,69 :: 		}
0x00F4	0x28C1      	GOTO       L_main13
L_main14:
;FinalProject.c,71 :: 		westRedLed = 0;
0x00F5	0x1008      	BCF        PORTD, 0
;FinalProject.c,72 :: 		southYellowLed = 0;
0x00F6	0x1208      	BCF        PORTD, 4
;FinalProject.c,73 :: 		southRedLed = 1; // South street red light
0x00F7	0x1588      	BSF        PORTD, 3
;FinalProject.c,76 :: 		for (i = 23; i > 0 && !current_mode; i--) {
0x00F8	0x3017      	MOVLW      23
0x00F9	0x00A7      	MOVWF      _i
L_main23:
0x00FA	0x0827      	MOVF       _i, 0
0x00FB	0x3C00      	SUBLW      0
0x00FC	0x1803      	BTFSC      STATUS, 0
0x00FD	0x292E      	GOTO       L_main24
0x00FE	0x0824      	MOVF       _current_mode, 0
0x00FF	0x1D03      	BTFSS      STATUS, 2
0x0100	0x292E      	GOTO       L_main24
L__main62:
;FinalProject.c,77 :: 		westGreenLed = (i > 3 ? 1 : 0);
0x0101	0x0827      	MOVF       _i, 0
0x0102	0x3C03      	SUBLW      3
0x0103	0x1803      	BTFSC      STATUS, 0
0x0104	0x2908      	GOTO       L_main28
0x0105	0x3001      	MOVLW      1
0x0106	0x00AC      	MOVWF      ?FLOC___mainT73
0x0107	0x2909      	GOTO       L_main29
L_main28:
0x0108	0x01AC      	CLRF       ?FLOC___mainT73
L_main29:
0x0109	0x182C      	BTFSC      ?FLOC___mainT73, 0
0x010A	0x290D      	GOTO       L__main76
0x010B	0x1108      	BCF        PORTD, 2
0x010C	0x290E      	GOTO       L__main77
L__main76:
0x010D	0x1508      	BSF        PORTD, 2
L__main77:
;FinalProject.c,78 :: 		westYellowLed = (i <= 3 ? 1 : 0);
0x010E	0x0827      	MOVF       _i, 0
0x010F	0x3C03      	SUBLW      3
0x0110	0x1C03      	BTFSS      STATUS, 0
0x0111	0x2915      	GOTO       L_main30
0x0112	0x3001      	MOVLW      1
0x0113	0x00AD      	MOVWF      ?FLOC___mainT77
0x0114	0x2916      	GOTO       L_main31
L_main30:
0x0115	0x01AD      	CLRF       ?FLOC___mainT77
L_main31:
0x0116	0x182D      	BTFSC      ?FLOC___mainT77, 0
0x0117	0x291A      	GOTO       L__main78
0x0118	0x1088      	BCF        PORTD, 1
0x0119	0x291B      	GOTO       L__main79
L__main78:
0x011A	0x1488      	BSF        PORTD, 1
L__main79:
;FinalProject.c,79 :: 		setCounter(i);
0x011B	0x0827      	MOVF       _i, 0
0x011C	0x00AE      	MOVWF      FARG_setCounter_seconds
0x011D	0x205B      	CALL       _setCounter
;FinalProject.c,80 :: 		Delay_ms(1000); // Wait 1 second
0x011E	0x300B      	MOVLW      11
0x011F	0x00FB      	MOVWF      R11
0x0120	0x3026      	MOVLW      38
0x0121	0x00FC      	MOVWF      R12
0x0122	0x305D      	MOVLW      93
0x0123	0x00FD      	MOVWF      R13
L_main32:
0x0124	0x0BFD      	DECFSZ     R13, 1
0x0125	0x2924      	GOTO       L_main32
0x0126	0x0BFC      	DECFSZ     R12, 1
0x0127	0x2924      	GOTO       L_main32
0x0128	0x0BFB      	DECFSZ     R11, 1
0x0129	0x2924      	GOTO       L_main32
0x012A	0x0000      	NOP
0x012B	0x0000      	NOP
;FinalProject.c,76 :: 		for (i = 23; i > 0 && !current_mode; i--) {
0x012C	0x03A7      	DECF       _i, 1
;FinalProject.c,81 :: 		}
0x012D	0x28FA      	GOTO       L_main23
L_main24:
;FinalProject.c,82 :: 		southRedLed = 0;
0x012E	0x1188      	BCF        PORTD, 3
;FinalProject.c,83 :: 		westYellowLed = 0;
0x012F	0x1088      	BCF        PORTD, 1
;FinalProject.c,84 :: 		} else { // Manual mode
0x0130	0x29A0      	GOTO       L_main33
L_main12:
;FinalProject.c,85 :: 		if (westRedLed) { // If West street is in red light
0x0131	0x1C08      	BTFSS      PORTD, 0
0x0132	0x296A      	GOTO       L_main34
;FinalProject.c,86 :: 		for (i = 3; i > 0 && current_mode; i--) {
0x0133	0x3003      	MOVLW      3
0x0134	0x00A7      	MOVWF      _i
L_main35:
0x0135	0x0827      	MOVF       _i, 0
0x0136	0x3C00      	SUBLW      0
0x0137	0x1803      	BTFSC      STATUS, 0
0x0138	0x2951      	GOTO       L_main36
0x0139	0x0824      	MOVF       _current_mode, 0
0x013A	0x1903      	BTFSC      STATUS, 2
0x013B	0x2951      	GOTO       L_main36
L__main61:
;FinalProject.c,87 :: 		southYellowLed = 1;
0x013C	0x1608      	BSF        PORTD, 4
;FinalProject.c,88 :: 		southGreenLed = 0;
0x013D	0x1288      	BCF        PORTD, 5
;FinalProject.c,89 :: 		setCounter(i);
0x013E	0x0827      	MOVF       _i, 0
0x013F	0x00AE      	MOVWF      FARG_setCounter_seconds
0x0140	0x205B      	CALL       _setCounter
;FinalProject.c,90 :: 		Delay_ms(1000); // Wait 1 second
0x0141	0x300B      	MOVLW      11
0x0142	0x00FB      	MOVWF      R11
0x0143	0x3026      	MOVLW      38
0x0144	0x00FC      	MOVWF      R12
0x0145	0x305D      	MOVLW      93
0x0146	0x00FD      	MOVWF      R13
L_main40:
0x0147	0x0BFD      	DECFSZ     R13, 1
0x0148	0x2947      	GOTO       L_main40
0x0149	0x0BFC      	DECFSZ     R12, 1
0x014A	0x2947      	GOTO       L_main40
0x014B	0x0BFB      	DECFSZ     R11, 1
0x014C	0x2947      	GOTO       L_main40
0x014D	0x0000      	NOP
0x014E	0x0000      	NOP
;FinalProject.c,86 :: 		for (i = 3; i > 0 && current_mode; i--) {
0x014F	0x03A7      	DECF       _i, 1
;FinalProject.c,91 :: 		}
0x0150	0x2935      	GOTO       L_main35
L_main36:
;FinalProject.c,92 :: 		while (current_mode && manualSwitch == 1) {
L_main41:
0x0151	0x0824      	MOVF       _current_mode, 0
0x0152	0x1903      	BTFSC      STATUS, 2
0x0153	0x2969      	GOTO       L_main42
0x0154	0x1C86      	BTFSS      PORTB, 1
0x0155	0x2969      	GOTO       L_main42
L__main60:
;FinalProject.c,93 :: 		westRedLed = 0;
0x0156	0x1008      	BCF        PORTD, 0
;FinalProject.c,94 :: 		westYellowLed = 0;
0x0157	0x1088      	BCF        PORTD, 1
;FinalProject.c,95 :: 		westGreenLed = 1;
0x0158	0x1508      	BSF        PORTD, 2
;FinalProject.c,96 :: 		southRedLed = 1;
0x0159	0x1588      	BSF        PORTD, 3
;FinalProject.c,97 :: 		southYellowLed = 0;
0x015A	0x1208      	BCF        PORTD, 4
;FinalProject.c,98 :: 		southGreenLed = 0;
0x015B	0x1288      	BCF        PORTD, 5
;FinalProject.c,99 :: 		setCounter(0);
0x015C	0x01AE      	CLRF       FARG_setCounter_seconds
0x015D	0x205B      	CALL       _setCounter
;FinalProject.c,100 :: 		Delay_ms(50); // Short delay to reflect manual switch state
0x015E	0x3082      	MOVLW      130
0x015F	0x00FC      	MOVWF      R12
0x0160	0x30DD      	MOVLW      221
0x0161	0x00FD      	MOVWF      R13
L_main45:
0x0162	0x0BFD      	DECFSZ     R13, 1
0x0163	0x2962      	GOTO       L_main45
0x0164	0x0BFC      	DECFSZ     R12, 1
0x0165	0x2962      	GOTO       L_main45
0x0166	0x0000      	NOP
0x0167	0x0000      	NOP
;FinalProject.c,101 :: 		}
0x0168	0x2951      	GOTO       L_main41
L_main42:
;FinalProject.c,102 :: 		} else { // If West street is in yellow light
0x0169	0x29A0      	GOTO       L_main46
L_main34:
;FinalProject.c,103 :: 		for (i = 3; i > 0 && current_mode; i--) {
0x016A	0x3003      	MOVLW      3
0x016B	0x00A7      	MOVWF      _i
L_main47:
0x016C	0x0827      	MOVF       _i, 0
0x016D	0x3C00      	SUBLW      0
0x016E	0x1803      	BTFSC      STATUS, 0
0x016F	0x2988      	GOTO       L_main48
0x0170	0x0824      	MOVF       _current_mode, 0
0x0171	0x1903      	BTFSC      STATUS, 2
0x0172	0x2988      	GOTO       L_main48
L__main59:
;FinalProject.c,104 :: 		westYellowLed = 1;
0x0173	0x1488      	BSF        PORTD, 1
;FinalProject.c,105 :: 		westGreenLed = 0;
0x0174	0x1108      	BCF        PORTD, 2
;FinalProject.c,106 :: 		setCounter(i);
0x0175	0x0827      	MOVF       _i, 0
0x0176	0x00AE      	MOVWF      FARG_setCounter_seconds
0x0177	0x205B      	CALL       _setCounter
;FinalProject.c,107 :: 		Delay_ms(1000); // Wait 1 second
0x0178	0x300B      	MOVLW      11
0x0179	0x00FB      	MOVWF      R11
0x017A	0x3026      	MOVLW      38
0x017B	0x00FC      	MOVWF      R12
0x017C	0x305D      	MOVLW      93
0x017D	0x00FD      	MOVWF      R13
L_main52:
0x017E	0x0BFD      	DECFSZ     R13, 1
0x017F	0x297E      	GOTO       L_main52
0x0180	0x0BFC      	DECFSZ     R12, 1
0x0181	0x297E      	GOTO       L_main52
0x0182	0x0BFB      	DECFSZ     R11, 1
0x0183	0x297E      	GOTO       L_main52
0x0184	0x0000      	NOP
0x0185	0x0000      	NOP
;FinalProject.c,103 :: 		for (i = 3; i > 0 && current_mode; i--) {
0x0186	0x03A7      	DECF       _i, 1
;FinalProject.c,108 :: 		}
0x0187	0x296C      	GOTO       L_main47
L_main48:
;FinalProject.c,109 :: 		while (current_mode && manualSwitch == 1) {
L_main53:
0x0188	0x0824      	MOVF       _current_mode, 0
0x0189	0x1903      	BTFSC      STATUS, 2
0x018A	0x29A0      	GOTO       L_main54
0x018B	0x1C86      	BTFSS      PORTB, 1
0x018C	0x29A0      	GOTO       L_main54
L__main58:
;FinalProject.c,110 :: 		westRedLed = 1;
0x018D	0x1408      	BSF        PORTD, 0
;FinalProject.c,111 :: 		westYellowLed = 0;
0x018E	0x1088      	BCF        PORTD, 1
;FinalProject.c,112 :: 		westGreenLed = 0;
0x018F	0x1108      	BCF        PORTD, 2
;FinalProject.c,113 :: 		southRedLed = 0;
0x0190	0x1188      	BCF        PORTD, 3
;FinalProject.c,114 :: 		southYellowLed = 0;
0x0191	0x1208      	BCF        PORTD, 4
;FinalProject.c,115 :: 		southGreenLed = 1;
0x0192	0x1688      	BSF        PORTD, 5
;FinalProject.c,116 :: 		setCounter(0);
0x0193	0x01AE      	CLRF       FARG_setCounter_seconds
0x0194	0x205B      	CALL       _setCounter
;FinalProject.c,117 :: 		Delay_ms(50); // Short delay to reflect manual switch state
0x0195	0x3082      	MOVLW      130
0x0196	0x00FC      	MOVWF      R12
0x0197	0x30DD      	MOVLW      221
0x0198	0x00FD      	MOVWF      R13
L_main57:
0x0199	0x0BFD      	DECFSZ     R13, 1
0x019A	0x2999      	GOTO       L_main57
0x019B	0x0BFC      	DECFSZ     R12, 1
0x019C	0x2999      	GOTO       L_main57
0x019D	0x0000      	NOP
0x019E	0x0000      	NOP
;FinalProject.c,118 :: 		}
0x019F	0x2988      	GOTO       L_main53
L_main54:
;FinalProject.c,119 :: 		}
L_main46:
;FinalProject.c,120 :: 		}
L_main33:
;FinalProject.c,121 :: 		}
0x01A0	0x28B5      	GOTO       L_main10
;FinalProject.c,122 :: 		}
L_end_main:
0x01A1	0x29A1      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [51]    _interrupt
0x0037      [17]    _Div_8X8_U
0x0048       [7]    _____DoICP
0x004F      [12]    ___CC2DW
0x005B      [72]    _setCounter
0x00A3     [255]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0024       [1]    _current_mode
0x0025       [2]    ___DoICPAddr
0x0027       [1]    _i
0x0028       [1]    ___savePCLATH
0x0029       [1]    ___saveSTATUS
0x002A       [1]    ?FLOC___mainT55
0x002B       [1]    ?FLOC___mainT59
0x002C       [1]    ?FLOC___mainT73
0x002D       [1]    ?FLOC___mainT77
0x002E       [1]    FARG_setCounter_seconds
0x002F       [1]    ?FLOC___setCounterT14
0x0030       [1]    ?FLOC___setCounterT18
0x0031       [1]    setCounter_units_L0
0x0032       [1]    setCounter_tens_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_setCounter4
  L_setCounter5
  L_setCounter6
  L_setCounter7
  L_setCounter8
  L_setCounter9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  L_end_interrupt
  _interrupt
  L__interrupt65
  L_end_setCounter
  _setCounter
  L__setCounter67
  L__setCounter68
  L__setCounter69
  L__setCounter70
  L_end_main
  _main
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_setCounter4
  L_setCounter5
  L_setCounter6
  L_setCounter7
  L_setCounter8
  L_setCounter9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  L_end_interrupt
  _interrupt
  L__interrupt65
  L_end_setCounter
  _setCounter
  L__setCounter67
  L__setCounter68
  L__setCounter69
  L__setCounter70
  L_end_main
  _main
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
